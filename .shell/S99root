#!/bin/bash

## General service to control forge-x services
##
## Copyright (C) 2025, Alexander K <https://github.com/drA1ex>
## Copyright (C) 2025, Sergei Rozhkov <https://github.com/ghzserg>
##
## This file may be distributed under the terms of the GNU GPLv3 license


if [ -f /tmp/SKIP_MOD ] || [ -f /tmp/SKIP_MOD_SOFT ] || [ -f /tmp/SKIP_MOD_HARD ]; then
    echo "Buildroot services disabled due to SKIP_MOD mode"
    touch "$NOT_FIRST_LAUNCH_F"
    exit 0
fi


source /opt/config/mod/.shell/common.sh

start() {
    if [ ! -f "$NOT_FIRST_LAUNCH_F" ] &&  [ -f "$CUSTOM_BOOT_F" ]; then
        # Turn off and on display's backlight otherwise it's will not work.
        "$SCRIPTS"/screen.sh backlight 0
        "$SCRIPTS"/screen.sh draw_splash
        "$SCRIPTS"/screen.sh backlight 100

        {
            echo "// Goodbye Flashforge :)"
            kill -9 "$PPID"
        } 2>&1
        
        sound_enabled=$($CFG_SCRIPT "$VAR_PATH" --get "sound" "1")
        [ "$sound_enabled" -eq 1 ] && \
            midi_file=$($CFG_SCRIPT "$VAR_PATH" --get "midi_on" "BattleCity.mid")
        if [ -n "$midi_file" ]; then
            audio midi -m "/opt/config/mod_data/midi/$midi_file" &
        fi

        mount --rbind /dev/pts "$MOD"/dev/pts
    fi

    if [ ! -f /opt/config/mod_data/database/moonraker-sql.db ]; then
        echo "// Initializing database..."
 
        rm -f /opt/config/mod/sql/version
        sync

        chroot "$MOD" /opt/config/mod/.root/start.sh &> /dev/null
        chroot "$MOD" /opt/config/mod/.root/stop.sh &> /dev/null

        wait_stopped
        sync

        /opt/config/mod/.shell/migrate_db.sh
        chroot "$MOD" /opt/config/mod/.root/restore_ota.sh
        sync
    fi
    
    echo "// Starting Buildroot env..."
    chroot "$MOD" /opt/config/mod/.root/start.sh

    if [ ! -f "$NOT_FIRST_LAUNCH_F" ]; then
        echo "// Done. Loaded for $(awk '{print $1}' < /proc/uptime) sec."
        echo "// Finishing boot..."
    else
        echo "// Done."
    fi

    rm -f "$SCREEN_FOLLOW_UP_LOG"
    rm -f "$BOOT_FAILURE_F"
    touch "$NOT_FIRST_LAUNCH_F"
}

stop() {
    echo "// Stopping Buildroot env..."
    chroot "$MOD" /opt/config/mod/.root/stop.sh
    echo "// Done"
}

wait_stopped() {
    [ -f "$MOD/run/moonraker.pid" ] && while kill -0 "$(cat "$MOD/run/moonraker.pid")" > /dev/null  2>&1; do sleep 1; done
    [ -f "$MOD/run/httpd.pid" ] && while kill -0 "$(cat "$MOD/run/httpd.pid")" > /dev/null  2>&1; do sleep 1; done
    [ -f "$MOD/run/ntpd.pid" ] && while kill -0 "$(cat "$MOD/run/ntpd.pid")" > /dev/null  2>&1; do sleep 1; done
    [ -f "$MOD/run/guppyscreen.pid" ] && while kill -0 "$(cat "$MOD/run/guppyscreen.pid")" > /dev/null  2>&1; do sleep 1; done
    [ -f "$MOD/var/run/ts_uinput.pid" ] && while kill -0 "$(cat "$MOD/var/run/ts_uinput.pid")" > /dev/null  2>&1; do sleep 1; done
}

switch() {
    case "$1" in
        start)
            start
        ;;
        stop)
            stop
        ;;
        restart|reload)
            stop
            wait_stopped
            
            start
        ;;
        *)
            echo "Usage: $0 {start|stop|restart}"
            exit 1
    esac
}

switch "$@" 2>&1 | logged "/data/logFiles/boot.log" --send-to-screen --screen-no-followup

exit $?
